// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// getRisksetMatrix
arma::mat getRisksetMatrix(arma::uvec actorID, arma::uvec typeID, arma::uword N, arma::uword C, bool directed);
RcppExport SEXP _remify_getRisksetMatrix(SEXP actorIDSEXP, SEXP typeIDSEXP, SEXP NSEXP, SEXP CSEXP, SEXP directedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type actorID(actorIDSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type typeID(typeIDSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type C(CSEXP);
    Rcpp::traits::input_parameter< bool >::type directed(directedSEXP);
    rcpp_result_gen = Rcpp::wrap(getRisksetMatrix(actorID, typeID, N, C, directed));
    return rcpp_result_gen;
END_RCPP
}
// getRisksetCube
arma::ucube getRisksetCube(arma::umat risksetMatrix, arma::uword N, arma::uword C);
RcppExport SEXP _remify_getRisksetCube(SEXP risksetMatrixSEXP, SEXP NSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type risksetMatrix(risksetMatrixSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(getRisksetCube(risksetMatrix, N, C));
    return rcpp_result_gen;
END_RCPP
}
// convertInputREH
Rcpp::List convertInputREH(Rcpp::DataFrame edgelist, Rcpp::List riskset, Rcpp::List actorsDictionary, Rcpp::List typesDictionary, arma::uword M, bool directed);
RcppExport SEXP _remify_convertInputREH(SEXP edgelistSEXP, SEXP risksetSEXP, SEXP actorsDictionarySEXP, SEXP typesDictionarySEXP, SEXP MSEXP, SEXP directedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type edgelist(edgelistSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type riskset(risksetSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type actorsDictionary(actorsDictionarySEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type typesDictionary(typesDictionarySEXP);
    Rcpp::traits::input_parameter< arma::uword >::type M(MSEXP);
    Rcpp::traits::input_parameter< bool >::type directed(directedSEXP);
    rcpp_result_gen = Rcpp::wrap(convertInputREH(edgelist, riskset, actorsDictionary, typesDictionary, M, directed));
    return rcpp_result_gen;
END_RCPP
}
// getBinaryREH
arma::mat getBinaryREH(Rcpp::DataFrame edgelist, Rcpp::List riskset, arma::ucube risksetCube, arma::uword M, arma::uword D);
RcppExport SEXP _remify_getBinaryREH(SEXP edgelistSEXP, SEXP risksetSEXP, SEXP risksetCubeSEXP, SEXP MSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type edgelist(edgelistSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type riskset(risksetSEXP);
    Rcpp::traits::input_parameter< arma::ucube >::type risksetCube(risksetCubeSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(getBinaryREH(edgelist, riskset, risksetCube, M, D));
    return rcpp_result_gen;
END_RCPP
}
// rehCpp
Rcpp::List rehCpp(Rcpp::DataFrame edgelist, Rcpp::List riskset, Rcpp::List covariates, Rcpp::StringVector add_actors, Rcpp::StringVector add_types, bool directed, bool ordinal, std::string time_unit, std::string time_class);
RcppExport SEXP _remify_rehCpp(SEXP edgelistSEXP, SEXP risksetSEXP, SEXP covariatesSEXP, SEXP add_actorsSEXP, SEXP add_typesSEXP, SEXP directedSEXP, SEXP ordinalSEXP, SEXP time_unitSEXP, SEXP time_classSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type edgelist(edgelistSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type riskset(risksetSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type add_actors(add_actorsSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type add_types(add_typesSEXP);
    Rcpp::traits::input_parameter< bool >::type directed(directedSEXP);
    Rcpp::traits::input_parameter< bool >::type ordinal(ordinalSEXP);
    Rcpp::traits::input_parameter< std::string >::type time_unit(time_unitSEXP);
    Rcpp::traits::input_parameter< std::string >::type time_class(time_classSEXP);
    rcpp_result_gen = Rcpp::wrap(rehCpp(edgelist, riskset, covariates, add_actors, add_types, directed, ordinal, time_unit, time_class));
    return rcpp_result_gen;
END_RCPP
}
// tryClone
arma::uword tryClone(arma::vec time);
RcppExport SEXP _remify_tryClone(SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(tryClone(time));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_remify_getRisksetMatrix", (DL_FUNC) &_remify_getRisksetMatrix, 5},
    {"_remify_getRisksetCube", (DL_FUNC) &_remify_getRisksetCube, 3},
    {"_remify_convertInputREH", (DL_FUNC) &_remify_convertInputREH, 6},
    {"_remify_getBinaryREH", (DL_FUNC) &_remify_getBinaryREH, 5},
    {"_remify_rehCpp", (DL_FUNC) &_remify_rehCpp, 9},
    {"_remify_tryClone", (DL_FUNC) &_remify_tryClone, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_remify(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
